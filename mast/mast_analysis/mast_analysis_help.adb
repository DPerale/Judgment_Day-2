with Ada.Text_IO;
use Ada.Text_IO;
procedure Mast_Analysis_Help is

begin

   Put_Line("-----------------------------------------------------------------------");
   Put_Line("--                              Mast                                 --");
   Put_Line("--     Modelling and Analysis Suite for Real-Time Applications       --");
   Put_Line("-----------------------------------------------------------------------");
   New_Line;
   Put_Line("   command format:");
   Put_Line("   ---------------");
   New_Line;
   Put_Line("      mast_analysis -h");
   Put_Line("      mast_analysis -help");
   Put_Line("            does not make the analysis, just prints help information");
   New_Line;
   Put_Line("      mast_analysis tool_name [options] input_file [output_file]");
   Put_Line("            executes the tool as described below.");
   New_Line;
   Put_Line("   tool description:");
   Put_Line("   -----------------");
   Put_Line("     ");
   Put_Line("      The tool parses the input file. If it finds errors it reports");
   Put_Line("      them and stops. The list of errors can be found in the file");
   Put_Line("      'mast_parser.lis'. If there are no errors, the real-time system");
   Put_Line("      description is transformed according to the options specified,");
   Put_Line("      the analysis is performed, and the results are output to the");
   Put_Line("      output file, if specified, or else to the standard output.");
   New_Line;
   Put_Line("      tool_name  : is one of the following (more to come)");
   Put_Line("      --------- ");
   Put_Line("                      parse      : does not make the analysis");
   Put_Line("                      classic_rm : classic response time analysis for");
   Put_Line("                                   arbitrary deadlines");
   Put_Line("                      varying_priorities : varying priorities analysis for");
   Put_Line("                                           linear monoprocessor systems");
   Put_Line("                      holistic   : holistic linear analysis");
   Put_Line("                      offset_based : offset-based linear analysis");
   Put_Line("                      offset_based_unoptimized : offset-based unoptimized");
   New_Line;
   Put_Line("           The Offset_Based analysis always provides the same or better");
   Put_Line("           results than the holistic analysis, which is provided for");
   Put_Line("           testing and comparison purposes.");
   New_Line;
   New_Line;
   Put_Line("      input_file : needs to be defined ussing the Mast file format");
   Put_Line("      ----------   (see the Mast file format definition)");
   New_Line;
   Put_Line("      output_file: will contain the results of the analysis");
   Put_Line("      -----------  if not specified, then output goes to the standard");
   Put_Line("                   output");
   Put_Line("  ");
   Put_Line("      options: the following options are defined:");
   Put_Line("      -------");
   New_Line;
   Put_Line("        -v, -verbose:");
   Put_Line("              enable the verbose option");
   New_Line;
   Put_Line("        -c, -ceilings");
   Put_Line("              calculate ceilings for priority ceiling resources before");
   Put_Line("              the analysis");
   New_Line;
   Put_Line("        -p, -priorities");
   Put_Line("              make an optimum priority assignment before the analysis,");
   Put_Line("              using the specified assignment technique");
   New_Line;
   Put_Line("        -t name, -technique name");
   Put_Line("              this option specifies the priority assignment technique");
   Put_Line("              named with 'name'; it can be one of the following:");
   Put_Line("                   hopa          (default for multiprocessors)");
   Put_Line("                   annealing");
   Put_Line("                   monoprocessor (default for monoprocessors)");
   New_Line;
   Put_Line("        -d filename, -description filename");
   Put_Line("               if this option is specified, after parsing the file and,");
   Put_Line("               if required, calculating the ceilings and priorities, a");
   Put_Line("               description of the system is written to the filename");
   Put_Line("               specified in the option. ");
   New_Line;
   Put_Line("        -s, -slack");
   Put_Line("               if this option is specified, the analysis is iterated");
   Put_Line("               to obtain the system slack, the transaction");
   Put_Line("               slack for each transaction, and the processing resource");
   Put_Line("               slack for each processing resource.");
   New_Line;
   Put_Line("        -os name, -operation_slack name");
   Put_Line("               if this option is specified, the analysis is iterated");
   Put_Line("               to obtain the operation slack for the operation named");
   Put_Line("               as 'name'.");
   New_Line;
end Mast_Analysis_Help;
